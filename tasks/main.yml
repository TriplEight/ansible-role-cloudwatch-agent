---
- name: Install AWS CloudWatch Agent (Debian)
  block:
    - name: Install xz-utils (required when using deb parameter of apt module)
      package:
        name:
          - xz-utils
    - name: Download the AWS CloudWatch Agent Debian package
      get_url:
        url: https://s3.amazonaws.com/amazoncloudwatch-agent/debian/amd64/latest/amazon-cloudwatch-agent.deb
        dest: /tmp/amazon-cloudwatch-agent.deb
    - name: Install AWS CloudWatch Agent Debian package
      apt:
        deb: /tmp/amazon-cloudwatch-agent.deb
  when: ansible_os_family == 'Debian'
  tags:
    - cloudwatch-agent
- name: Install AWS CloudWatch Agent (RedHat)
  block:
    - name: Install AWS CloudWatch Agent RPM
      dnf:
        name:
          - https://s3.amazonaws.com/amazoncloudwatch-agent/redhat/amd64/latest/amazon-cloudwatch-agent.rpm
  when: ansible_os_family == 'RedHat'
  tags:
    - cloudwatch-agent

# Note that we are using a single config file for all instances,
# regardless of Linux distribution.  This means that the config file
# may well (and most likely does) reference log files that do not
# exist on all instances.
- name: Copy over CloudWatch Agent configuration
  copy:
    src: amazon-cloudwatch-agent.json
    dest: /opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json
    mode: 0600
  tags:
    - cloudwatch-agent

# The AWS CloudWatch Agent systemd unit kicks off a process that
# starts the CloudWatch Agent and then dies.  Therefore we can't start
# it here because it will be started again during the idempotence test
# and therefore will fail idempotence.
- name: Enable AWS CloudWatch Agent
  service:
    name: amazon-cloudwatch-agent
    enabled: yes
  tags:
    - cloudwatch-agent

- name: Install and enable rsyslog
  block:
    - name: Install rsyslog
      package:
        name:
          - rsyslog
    - name: Enable rsyslog
      service:
        name: rsyslog
        enabled: yes
  tags:
    - cloudwatch-agent
    - rsyslog

# Configure systemd-journald to forward all journal logs to rsyslog,
# so that the Amazon CloudWatch Agent can in turn forward them to
# CloudWatch.
- name: Forward journald log entries to rsyslog
  lineinfile:
    path: /etc/systemd/journald.conf
    regexp: '{{ item.regex }}'
    line: '{{ item.line }}'
    # This forces lineinfile not to append the line if the regex fails
    # to match
    backrefs: yes
  loop:
    - {regex: '^#?ForwardToSyslog', line: "ForwardToSyslog=yes"}
    - {regex: '^#?MaxLevelSyslog', line: "MaxLevelSyslog=debug"}
  tags:
    - cloudwatch-agent
    - journald
